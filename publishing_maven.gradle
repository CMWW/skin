plugins {
    id 'com.github.dcendents.android-maven'
}
version = '4.1.0'
group = 'skin.support'

def siteUrl = 'https://github.com/CMWW/skin'
def gitUrl = 'https://github.com/CMWW/skin.git'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = "skin-support"
        name = moduleName
        desc = descContent
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/CMWW/skin/issues'
        vcsUrl = gitUrl
        licenses = ['MIT']
        labels = ['skin', 'support', 'theme', 'android']
        publicDownloadNumbers = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'skin-support'
                url siteUrl
                licenses {
                    license {
                        name 'MIT'
                        url 'https://github.com/CMWW/skin/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id 'ximsfei'
                        name 'Pengfeng Wang'
                        email 'ximsfei@gmail.com'
                    }
                }
                scm {
                    connection 'https://github.com/ximsfei/Android-skin-support.git'
                    developerConnection 'https://github.com/ximsfei/Android-skin-support.git'
                    url siteUrl

                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

tasks.register('sourcesJar', Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

tasks.register('javadoc', Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}